diff --git a/aarch64.cfg b/aarch64.cfg
index e69de29b..f5afeb81 100644
--- a/aarch64.cfg
+++ b/aarch64.cfg
@@ -0,0 +1,23 @@
+{
+	"name": "qemu-aarch64",
+	"target": "linux/arm64",
+	"http": "localhost:12346",
+	"rpc": "127.0.0.1:5555",
+	"workdir": "./workdir64",
+	"kernel_obj": "../../../../../buildroot/output/build/linux-5.7.4/vmlinux",
+	"kernel_src": "../../../../../buildroot/output/build/linux-5.7.4",
+	"syzkaller": ".",
+	"image": "../../../../../buildroot/output/images/rootfs.ext2",
+	"sandbox": "namespace",
+	"reproduce": false,
+	"procs": 8,
+	"type": "qemu",
+	"vm": {
+		"count": 1,
+		"cmdline": "console=ttyAMA0,115200 root=/dev/vda",
+		"kernel": "../../../../../buildroot/output/images/Image",
+		"image_device": "vd",
+		"mem": 1024,
+		"cpu": 4
+	}
+}
diff --git a/arm.cfg b/arm.cfg
index e69de29b..a6384142 100644
--- a/arm.cfg
+++ b/arm.cfg
@@ -0,0 +1,24 @@
+{
+	"name": "qemu-arm",
+	"target": "linux/arm",
+	"http": "localhost:12345",
+	"rpc": "127.0.0.1:5556",
+	"workdir": "./workdir",
+	"kernel_obj": "../../../../../buildroot/output/build/linux-5.7.4/vmlinux",
+	"kernel_src": "../../../../../buildroot/output/build/linux-5.7.4",
+	"syzkaller": ".",
+	"image": "../../../../../buildroot/output/images/rootfs.ext2",
+	"sandbox": "namespace",
+	"reproduce": false,
+	"procs": 8,
+	"type": "qemu",
+	"vm": {
+		"count": 1,
+		"qemu_args": "-M vexpress-a9 -cpu cortex-a9 -dtb ../../../../../buildroot/output/images/vexpress-v2p-ca9.dtb",
+		"cmdline": "console=ttyAMA0,115200 root=/dev/mmcblk0",
+		"kernel": "../../../../../buildroot/output/images/zImage",
+		"image_device": "sd",
+		"mem": 1024,
+		"cpu": 4
+	}
+}
diff --git a/sys/targets/targets.go b/sys/targets/targets.go
index 3299e52b..1b8b045e 100644
--- a/sys/targets/targets.go
+++ b/sys/targets/targets.go
@@ -171,8 +171,8 @@
 			VMArch:           "arm64",
 			PtrSize:          4,
 			PageSize:         4 << 10,
-			CFlags:           []string{"-D__LINUX_ARM_ARCH__=6", "-march=armv6"},
-			Triple:           "arm-linux-gnueabi",
+			CFlags:           []string{"-D__LINUX_ARM_ARCH__=7", "-march=armv7-a"},
+			Triple:           "arm-linux-gnueabihf",
 			KernelArch:       "arm",
 			KernelHeaderArch: "arm",
 		},
diff --git a/vm/qemu/qemu.go b/vm/qemu/qemu.go
index dae8f493..6ce6050c 100644
--- a/vm/qemu/qemu.go
+++ b/vm/qemu/qemu.go
@@ -332,11 +332,22 @@ func (inst *instance) boot() error {
 		"-m", strconv.Itoa(inst.cfg.Mem),
 		"-smp", strconv.Itoa(inst.cfg.CPU),
 		"-net", "nic" + inst.archConfig.NicModel,
-		"-net", fmt.Sprintf("user,host=%v,hostfwd=tcp::%v-:22", hostAddr, inst.port),
+	}
+	if inst.cfg.ImageDevice == "vd" {
+		args = append(args,
+			"-netdev", fmt.Sprintf("user,id=eth0,host=%v,hostfwd=tcp::%v-:22", hostAddr, inst.port),
+			"-device", "virtio-net-device,netdev=eth0",
+		)
+	} else {
+		args = append(args,
+			"-net", fmt.Sprintf("user,host=%v,hostfwd=tcp::%v-:22", hostAddr, inst.port),
+		)
+	}
+	args = append(args,
 		"-display", "none",
 		"-serial", "stdio",
 		"-no-reboot",
-	}
+	)
 	args = append(args, splitArgs(inst.cfg.QemuArgs, filepath.Join(inst.workdir, "template"))...)
 	if inst.image == "9p" {
 		args = append(args,
@@ -344,17 +355,24 @@ func (inst *instance) boot() error {
 			"-device", "virtio-9p-pci,fsdev=fsdev0,mount_tag=/dev/root",
 		)
 	} else if inst.image != "" {
-		// inst.cfg.ImageDevice can contain spaces
-		imgline := strings.Split(inst.cfg.ImageDevice, " ")
-		imgline[0] = "-" + imgline[0]
-		if strings.HasSuffix(imgline[len(imgline)-1], "file=") {
-			imgline[len(imgline)-1] = imgline[len(imgline)-1] + inst.image
+		if inst.cfg.ImageDevice == "vd" {
+			args = append(args,
+				"-drive", "file="+inst.image+",if=none,format=raw,id=hd0",
+				"-device", "virtio-blk-device,drive=hd0", "-snapshot",
+			)
 		} else {
-			imgline = append(imgline, inst.image)
-		}
-		args = append(args, imgline...)
-		if inst.cfg.Snapshot {
-			args = append(args, "-snapshot")
+			// inst.cfg.ImageDevice can contain spaces
+			imgline := strings.Split(inst.cfg.ImageDevice, " ")
+			imgline[0] = "-" + imgline[0]
+			if strings.HasSuffix(imgline[len(imgline)-1], "file=") {
+				imgline[len(imgline)-1] = imgline[len(imgline)-1] + inst.image
+			} else {
+				imgline = append(imgline, inst.image)
+			}
+			args = append(args, imgline...)
+			if inst.cfg.Snapshot {
+				args = append(args, "-snapshot")
+			}
 		}
 	}
 	if inst.cfg.Initrd != "" {
